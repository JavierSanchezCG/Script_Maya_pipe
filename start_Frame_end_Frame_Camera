import maya.cmds as cmds

# Función para configurar el rango de render basado en la cámara
def set_render_range_from_usd_camera():
    parent_set = 'usdEditAsMaya'
    camera_name = 'renderCam'
    render_camera = None

    # Verificar si el set usdEditAsMaya existe
    if cmds.objExists(parent_set):
        # Buscar la cámara dentro del set usdEditAsMaya
        members = cmds.sets(parent_set, query=True) or []
        for member in members:
            if member.endswith(camera_name):
                render_camera = member
                break
        if not render_camera:
            print(f'Advertencia: La cámara "{camera_name}" no se encontró dentro del set "{parent_set}".')
    else:
        print(f'Advertencia: El set "{parent_set}" no existe en la escena.')

    # Si no se encontró la cámara en el set, buscarla directamente en la escena
    if not render_camera:
        if cmds.objExists(camera_name):
            render_camera = camera_name
            print(f'Cámara encontrada directamente en la escena: {render_camera}')
        else:
            cmds.error(f'Error: La cámara "{camera_name}" no existe en la escena.')
            return

    # Obtener las curvas de animación conectadas a la cámara
    animation_curves = cmds.listConnections(render_camera, type='animCurve') or []
    if not animation_curves:
        cmds.error(f'Error: La cámara "{render_camera}" no tiene animación.')
        return

    # Obtener los frames clave de las curvas de animación
    keyframes = []
    for anim_curve in animation_curves:
        keyframes += cmds.keyframe(anim_curve, query=True) or []

    # Determinar el primer y último frame animado
    if not keyframes:
        cmds.error(f'Error: No se encontraron keyframes en la cámara "{render_camera}".')
        return

    start_frame = int(min(keyframes))
    end_frame = int(max(keyframes))

    # Configurar los valores en los ajustes de render
    cmds.setAttr('defaultRenderGlobals.startFrame', start_frame)
    cmds.setAttr('defaultRenderGlobals.endFrame', end_frame)

    # También configurar la línea de tiempo para mayor comodidad
    cmds.playbackOptions(edit=True, minTime=start_frame, maxTime=end_frame)
    cmds.playbackOptions(edit=True, animationStartTime=start_frame, animationEndTime=end_frame)

    print(f'Rango de render configurado: Start Frame = {start_frame}, End Frame = {end_frame}')

# Ejecutar la función
set_render_range_from_usd_camera()
